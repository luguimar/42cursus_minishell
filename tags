!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-suppressions	Makefile	/^	valgrind -s --suppressions=readline.supp --leak-check=full --show-leak-kinds=all --log-file=output.log .\/minishell$/;"	kind:macro	line:54
BONUS	lib/libft/Makefile	/^BONUS = ft_lstnew.c ft_lstadd_front.c ft_lstadd_back.c ft_lstdelone.c ft_lstclear.c ft_lstiter.c ft_lstmap.c ft_lstsize.c ft_lstlast.c$/;"	kind:macro	line:19
BUFFER_SIZE	lib/libft/libft.h	23;"	kind:macro	line:23
CC	Makefile	/^CC = cc -g #-fsanitize=address$/;"	kind:macro	line:19
CC	lib/libft/Makefile	/^CC = cc -g$/;"	kind:macro	line:27
CFLAGS	Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	kind:macro	line:21
CFLAGS	lib/libft/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	kind:macro	line:29
EXTRA	lib/libft/Makefile	/^	EXTRA = ft_putnbr_base_fd.c ft_printf.c get_next_line.c get_next_line_utils.c free_array_of_strings.c ft_splitquote.c quotes.c quotes_utils.c ft_matrixlen.c ft_abs_value.c ft_atol.c ft_strcmp.c int_size_utils.c ft_split_if_not_in_quote.c ft_isint.c free_array_of_ints.c ft_dup_array_of_strings.c ft_is_special_char.c ft_splitstr.c ft_lstswap.c ft_lstdup.c$/;"	kind:macro	line:21
INCLUDE	Makefile	/^INCLUDE = -I .\/include -I .\/lib\/libft\/include$/;"	kind:macro	line:23
INCLUDE	lib/libft/Makefile	/^INCLUDE = -I .$/;"	kind:macro	line:30
LIBFT	Makefile	/^LIBFT = ${LIBFT_PATH}\/libft.a$/;"	kind:macro	line:26
LIBFT_H	lib/libft/libft.h	14;"	kind:macro	line:14
LIBFT_PATH	Makefile	/^LIBFT_PATH = lib\/libft$/;"	kind:macro	line:25
LIBS	Makefile	/^LIBS = -ltermcap -lncurses -lreadline$/;"	kind:macro	line:24
MAKE	Makefile	/^MAKE = make -C$/;"	kind:macro	line:22
MINISHELL_H	includes/minishell.h	14;"	kind:macro	line:14
NAME	Makefile	/^NAME = minishell$/;"	kind:macro	line:13
NAME	lib/libft/Makefile	/^NAME = libft.a$/;"	kind:macro	line:13
OBJS	Makefile	/^OBJS = ${SRC:.c=.o}$/;"	kind:macro	line:17
OBJS	lib/libft/Makefile	/^OBJS = ${SRC:.c=.o}$/;"	kind:macro	line:25
PART1	lib/libft/Makefile	/^PART1 = ft_tolower.c ft_toupper.c ft_isprint.c ft_isascii.c ft_isalnum.c ft_isdigit.c ft_isalpha.c ft_atoi.c ft_strlen.c ft_strlcat.c ft_strncmp.c ft_strdup.c ft_calloc.c ft_memcpy.c ft_strchr.c ft_strrchr.c ft_strnstr.c ft_bzero.c ft_memchr.c ft_memcmp.c ft_memset.c ft_memmove.c ft_strlcpy.c$/;"	kind:macro	line:15
PART2	lib/libft/Makefile	/^PART2 = ft_itoa.c ft_strjoin.c ft_split.c ft_striteri.c ft_strmapi.c ft_substr.c ft_strtrim.c ft_putchar_fd.c ft_putstr_fd.c ft_putendl_fd.c ft_putnbr_fd.c$/;"	kind:macro	line:17
REMOVE	Makefile	/^REMOVE = rm -f$/;"	kind:macro	line:20
RM	lib/libft/Makefile	/^RM = rm -f$/;"	kind:macro	line:28
SRC	Makefile	/^SRC = src\/main.c src\/pipex.c src\/pipex_utils.c src\/envparser.c src\/builtins.c src\/envparser_extra.c src\/cd_utils.c src\/cd_utils1.c src\/unset_utils.c src\/builtins_extra.c src\/errors.c src\/cd_utils2.c src\/signals.c src\/expand.c src\/ft_echo.c src\/redirects_handler.c $/;"	kind:macro	line:15
SRC	lib/libft/Makefile	/^SRC = ${PART1} ${PART2} ${BONUS} ${EXTRA}$/;"	kind:macro	line:23
add_env	src/envparser.c	/^void	add_env(t_shell *shell, char *key, char *value)$/;"	kind:function	line:42
algcounter	lib/libft/ft_itoa.c	/^int	algcounter(int n)$/;"	kind:function	line:26
arg_count	includes/minishell.h	/^	int		arg_count;$/;"	kind:member	line:36	struct:s_shell	access:public
bigger	lib/libft/int_size_utils.c	/^int	bigger(int a, int b)$/;"	kind:function	line:15
change_value	src/envparser.c	/^int	change_value(t_list *env, char *key, char *value)$/;"	kind:function	line:15
check_args	src/main.c	/^static int	check_args(char **args)$/;"	kind:function	line:38	file:
check_error	src/pipex.c	/^void	check_error(int status, char *message, char **args, char *path)$/;"	kind:function	line:43
checktype	lib/libft/ft_printf.c	/^int	checktype(int ch, va_list args)$/;"	kind:function	line:62
clean_stash	lib/libft/get_next_line.c	/^static char	*clean_stash(char *stash)$/;"	kind:function	line:15	file:
content	lib/libft/libft.h	/^	void			*content;$/;"	kind:member	line:28	struct:s_list	access:public
delete_env_node	src/unset_utils.c	/^void	delete_env_node(t_list **env, char *key)$/;"	kind:function	line:27
dup2pipe	src/pipex_utils.c	/^void	dup2pipe(int **fds, int i, t_shell *shell, char **args)$/;"	kind:function	line:37
env	includes/minishell.h	/^	t_list	*env;$/;"	kind:member	line:39	struct:s_shell	access:public
env_array	includes/minishell.h	/^	char	**env_array;$/;"	kind:member	line:38	struct:s_shell	access:public
env_to_array	src/envparser.c	/^char	**env_to_array(t_list *env)$/;"	kind:function	line:48
env_to_list	src/envparser.c	/^int	env_to_list(t_shell *shell, char **envp)$/;"	kind:function	line:95
envnew	src/envparser.c	/^t_env	*envnew(char *key, char *value, char *env_i, int is_just_exported)$/;"	kind:function	line:69
exec_builtin	src/builtins.c	/^int	exec_builtin(char **args, t_shell *shell, int ispipex)$/;"	kind:function	line:92
exec_command	src/pipex.c	/^static void	exec_command(char *path, t_shell *shell, char **args, int isparent)$/;"	kind:function	line:15	file:
execve_error	src/errors.c	/^int	execve_error(char *path, char **args, t_shell *shell, int isparent)$/;"	kind:function	line:15
exit_status	includes/minishell.h	/^	int		exit_status;$/;"	kind:member	line:34	struct:s_shell	access:public
expand	src/expand.c	/^void	expand(char **input, t_shell *shell)$/;"	kind:function	line:82
expand_aux	src/expand.c	/^static int	expand_aux(char **input, t_shell *shell, int j)$/;"	kind:function	line:63	file:
expand_aux_aux	src/expand.c	/^static int	expand_aux_aux(char ***keyandmore, t_shell *shell, int i)$/;"	kind:function	line:15	file:
export_version	includes/minishell.h	/^	char	*export_version;$/;"	kind:member	line:26	struct:s_env	access:public
free_array_of_ints	lib/libft/free_array_of_ints.c	/^void	free_array_of_ints(int **array, int size)$/;"	kind:function	line:15
free_array_of_strings	lib/libft/free_array_of_strings.c	/^void	free_array_of_strings(char **str)$/;"	kind:function	line:15
free_env	src/unset_utils.c	/^void	free_env(void *content)$/;"	kind:function	line:15
free_everything	src/main.c	/^void	free_everything(t_shell *shell)$/;"	kind:function	line:16
ft_abs_value	lib/libft/ft_abs_value.c	/^int	ft_abs_value(int n)$/;"	kind:function	line:15
ft_atoi	lib/libft/ft_atoi.c	/^int	ft_atoi(const char *nptr)$/;"	kind:function	line:15
ft_atol	lib/libft/ft_atol.c	/^long long	ft_atol(const char *nptr)$/;"	kind:function	line:15
ft_bzero	lib/libft/ft_bzero.c	/^void	ft_bzero(void *b, size_t len)$/;"	kind:function	line:15
ft_calloc	lib/libft/ft_calloc.c	/^void	*ft_calloc(size_t number, size_t size)$/;"	kind:function	line:15
ft_cd	src/builtins.c	/^static int	ft_cd(char **args, t_shell *shell)$/;"	kind:function	line:74	file:
ft_cd_aux	src/cd_utils.c	/^int	ft_cd_aux(char **args, t_shell *shell)$/;"	kind:function	line:106
ft_cd_aux_extra	src/cd_utils.c	/^int	ft_cd_aux_extra(t_shell *shell, char ***args)$/;"	kind:function	line:44
ft_cd_case_dash	src/cd_utils2.c	/^int	ft_cd_case_dash(t_shell *shell, char **args)$/;"	kind:function	line:21
ft_cd_case_dash_aux	src/cd_utils2.c	/^static void	ft_cd_case_dash_aux(char **path)$/;"	kind:function	line:15	file:
ft_cd_case_dotdot	src/cd_utils.c	/^int	ft_cd_case_dotdot(t_shell *shell, char ***args)$/;"	kind:function	line:15
ft_cd_case_double_dash	src/cd_utils1.c	/^int	ft_cd_case_double_dash(t_shell *shell, char ***args)$/;"	kind:function	line:15
ft_cd_case_slash	src/cd_utils.c	/^int	ft_cd_case_slash(t_shell *shell, char ***args)$/;"	kind:function	line:59
ft_cd_case_tild	src/cd_utils.c	/^int	ft_cd_case_tild(t_shell *shell, char ***args)$/;"	kind:function	line:76
ft_cd_check_for_dots	src/cd_utils1.c	/^char	*ft_cd_check_for_dots(char *args)$/;"	kind:function	line:81
ft_cd_normal	src/cd_utils1.c	/^int	ft_cd_normal(char **args, t_shell *shell)$/;"	kind:function	line:94
ft_dup_array_of_strings	lib/libft/ft_dup_array_of_strings.c	/^char	**ft_dup_array_of_strings(char **array)$/;"	kind:function	line:15
ft_echo	src/ft_echo.c	/^int	ft_echo(char **args)$/;"	kind:function	line:15
ft_env	src/builtins_extra.c	/^int	ft_env(char **args, t_shell *shell)$/;"	kind:function	line:134
ft_envsort	src/builtins_extra.c	/^static void	ft_envsort(t_list *env)$/;"	kind:function	line:15	file:
ft_exit	src/builtins.c	/^int	ft_exit(char **args, t_shell *shell, char **old_args)$/;"	kind:function	line:33
ft_export	src/builtins_extra.c	/^int	ft_export(char **args, t_shell *shell)$/;"	kind:function	line:61
ft_getdirs	src/pipex_utils.c	/^char	*ft_getdirs(char *cmd)$/;"	kind:function	line:15
ft_is_special_char	lib/libft/ft_is_special_char.c	/^int	ft_is_special_char(char c)$/;"	kind:function	line:15
ft_isalnum	lib/libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	kind:function	line:15
ft_isalpha	lib/libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	kind:function	line:15
ft_isascii	lib/libft/ft_isascii.c	/^int	ft_isascii(int c)$/;"	kind:function	line:15
ft_isdigit	lib/libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	kind:function	line:15
ft_isint	lib/libft/ft_isint.c	/^int	ft_isint(const char *str)$/;"	kind:function	line:15
ft_isprint	lib/libft/ft_isprint.c	/^int	ft_isprint(int c)$/;"	kind:function	line:15
ft_itoa	lib/libft/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	kind:function	line:59
ft_lstadd_back	lib/libft/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *novel)$/;"	kind:function	line:15
ft_lstadd_front	lib/libft/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *novel)$/;"	kind:function	line:15
ft_lstclear	lib/libft/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	kind:function	line:20
ft_lstdelone	lib/libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list **head, t_list *lst, void (*del)(void *))$/;"	kind:function	line:15
ft_lstdup	lib/libft/ft_lstdup.c	/^t_list	*ft_lstdup(t_list *lst)$/;"	kind:function	line:15
ft_lstiter	lib/libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	kind:function	line:15
ft_lstlast	lib/libft/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	kind:function	line:15
ft_lstmap	lib/libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	kind:function	line:15
ft_lstnew	lib/libft/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	kind:function	line:15
ft_lstsize	lib/libft/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	kind:function	line:15
ft_lstswap	lib/libft/ft_lstswap.c	/^void	ft_lstswap(t_list *lst1, t_list *lst2)$/;"	kind:function	line:15
ft_matrixlen	lib/libft/ft_matrixlen.c	/^int	ft_matrixlen(void **matrix)$/;"	kind:function	line:15
ft_memchr	lib/libft/ft_memchr.c	/^void	*ft_memchr(const void *b, int c, size_t len)$/;"	kind:function	line:15
ft_memcmp	lib/libft/ft_memcmp.c	/^int	ft_memcmp(const void *b1, const void *b2, size_t len)$/;"	kind:function	line:15
ft_memcpy	lib/libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t len)$/;"	kind:function	line:15
ft_memmove	lib/libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	kind:function	line:15
ft_memset	lib/libft/ft_memset.c	/^void	*ft_memset(void *dest, int c, size_t len)$/;"	kind:function	line:15
ft_nothing	lib/libft/ft_lstclear.c	/^void	ft_nothing(void *content)$/;"	kind:function	line:15
ft_printf	lib/libft/ft_printf.c	/^int	ft_printf(const char *str, ...)$/;"	kind:function	line:84
ft_putchar_fd	lib/libft/ft_putchar_fd.c	/^int	ft_putchar_fd(char c, int fd)$/;"	kind:function	line:15
ft_putendl_fd	lib/libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	kind:function	line:15
ft_putnbr_base_fd	lib/libft/ft_putnbr_base_fd.c	/^int	ft_putnbr_base_fd(unsigned long decimal, char *base, int fd)$/;"	kind:function	line:15
ft_putnbr_fd	lib/libft/ft_putnbr_fd.c	/^int	ft_putnbr_fd(int n, int fd)$/;"	kind:function	line:15
ft_putstr_fd	lib/libft/ft_putstr_fd.c	/^int	ft_putstr_fd(char *s, int fd)$/;"	kind:function	line:15
ft_pwd	src/builtins.c	/^static int	ft_pwd(char **args, t_shell *shell)$/;"	kind:function	line:62	file:
ft_quote_count	lib/libft/ft_splitquote.c	/^int	ft_quote_count(char *str)$/;"	kind:function	line:15
ft_remove_quotes	lib/libft/ft_splitquote.c	/^char	*ft_remove_quotes(char *str)$/;"	kind:function	line:66
ft_remove_quotes_aux	lib/libft/ft_splitquote.c	/^static void	ft_remove_quotes_aux(char *str, char *new)$/;"	kind:function	line:41	file:
ft_split	lib/libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	kind:function	line:93
ft_split_if_not_in_quote	lib/libft/ft_split_if_not_in_quote.c	/^char	**ft_split_if_not_in_quote(char *s, char c)$/;"	kind:function	line:94
ft_splitquote	lib/libft/ft_splitquote.c	/^char	**ft_splitquote(char *s, char c)$/;"	kind:function	line:80
ft_splitquote_nulls	lib/libft/quotes_utils.c	/^char	**ft_splitquote_nulls(char *s, char c)$/;"	kind:function	line:66
ft_splitstr	lib/libft/ft_splitstr.c	/^char	**ft_splitstr(char *str, char *split)$/;"	kind:function	line:15
ft_strchr	lib/libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	kind:function	line:15
ft_strchrnum	lib/libft/get_next_line_utils.c	/^int	ft_strchrnum(const char *s, int c)$/;"	kind:function	line:15
ft_strcmp	lib/libft/ft_strcmp.c	/^int	ft_strcmp(const char *str1, const char *str2)$/;"	kind:function	line:15
ft_strdup	lib/libft/ft_strdup.c	/^char	*ft_strdup(const char *str)$/;"	kind:function	line:15
ft_striteri	lib/libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	kind:function	line:15
ft_strjoin	lib/libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	kind:function	line:70
ft_strjoinfree	lib/libft/get_next_line_utils.c	/^char	*ft_strjoinfree(char *s1, char *s2)$/;"	kind:function	line:38
ft_strjoinfree2	lib/libft/ft_strjoin.c	/^char	*ft_strjoinfree2(char *s1, char *s2)$/;"	kind:function	line:43
ft_strjoinfreeall	lib/libft/ft_strjoin.c	/^char	*ft_strjoinfreeall(char *s1, char *s2)$/;"	kind:function	line:15
ft_strlcat	lib/libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t dstsize)$/;"	kind:function	line:15
ft_strlcpy	lib/libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t dstsize)$/;"	kind:function	line:15
ft_strlen	lib/libft/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/;"	kind:function	line:15
ft_strmapi	lib/libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	kind:function	line:15
ft_strncmp	lib/libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t len)$/;"	kind:function	line:15
ft_strnstr	lib/libft/ft_strnstr.c	/^char	*ft_strnstr(const char *big, const char *little, size_t len)$/;"	kind:function	line:15
ft_strrchr	lib/libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	kind:function	line:15
ft_strremoveprev	src/cd_utils1.c	/^char	*ft_strremoveprev(char *str, char *old, char *new)$/;"	kind:function	line:44
ft_strreplace	src/cd_utils1.c	/^char	*ft_strreplace(char *str, char *old, char *new)$/;"	kind:function	line:64
ft_strtrim	lib/libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	kind:function	line:15
ft_substr	lib/libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	kind:function	line:15
ft_tolower	lib/libft/ft_tolower.c	/^int	ft_tolower(int c)$/;"	kind:function	line:15
ft_toupper	lib/libft/ft_toupper.c	/^int	ft_toupper(int c)$/;"	kind:function	line:15
ft_unset	src/builtins.c	/^static int	ft_unset(char **args, t_shell *shell)$/;"	kind:function	line:15	file:
full	includes/minishell.h	/^	char	*full;$/;"	kind:member	line:25	struct:s_env	access:public
get_env_value	src/envparser_extra.c	/^char	*get_env_value(t_list *env, char *key)$/;"	kind:function	line:15
get_line	lib/libft/get_next_line.c	/^static char	*get_line(char *stash)$/;"	kind:function	line:38	file:
get_next_line	lib/libft/get_next_line.c	/^char	*get_next_line(int fd)$/;"	kind:function	line:91
get_right_path	src/pipex.c	/^char	*get_right_path(char **cmd, char **envp, char *right_path)$/;"	kind:function	line:58
get_right_path_aux	src/pipex_utils.c	/^int	get_right_path_aux(char **cmd, char **path, int i, char **right_path)$/;"	kind:function	line:63
get_right_path_aux2	src/pipex_utils.c	/^int	get_right_path_aux2(char **cmd, char **right_path)$/;"	kind:function	line:50
get_stash	lib/libft/get_next_line.c	/^static char	*get_stash(int fd, char *stash)$/;"	kind:function	line:66	file:
has_open_quote	lib/libft/quotes_utils.c	/^char	has_open_quote(char *s, int index)$/;"	kind:function	line:23
input	includes/minishell.h	/^	char	*input;$/;"	kind:member	line:37	struct:s_shell	access:public
inquote	lib/libft/quotes.c	/^char	inquote(char *s, int index)$/;"	kind:function	line:15
is_beginning_quote	lib/libft/quotes.c	/^int	is_beginning_quote(char *s, int index)$/;"	kind:function	line:82
is_beginning_wordquote	lib/libft/quotes_utils.c	/^int	is_beginning_wordquote(char *s, int index, char c)$/;"	kind:function	line:54
is_c_not_in_quotes	lib/libft/quotes_utils.c	/^int	is_c_not_in_quotes(char *s, int index, char c)$/;"	kind:function	line:15
is_end_quote	lib/libft/quotes.c	/^int	is_end_quote(char *s, int index)$/;"	kind:function	line:72
is_end_wordquote	lib/libft/quotes_utils.c	/^int	is_end_wordquote(char *s, int index, char c)$/;"	kind:function	line:42
is_just_exported	includes/minishell.h	/^	int		is_just_exported;$/;"	kind:member	line:27	struct:s_env	access:public
isneg	lib/libft/ft_itoa.c	/^char	*isneg(int algcount, int n)$/;"	kind:function	line:39
isquote	lib/libft/quotes.c	/^char	isquote(char *s, int index)$/;"	kind:function	line:36
key	includes/minishell.h	/^	char	*key;$/;"	kind:member	line:23	struct:s_env	access:public
main	minishell_tester/test_files/loop.c	/^int	main(int argc, char const *argv[])$/;"	kind:function	line:17
main	src/main.c	/^int	main(int argc, char **argv, char **envp)$/;"	kind:function	line:92
main_handler	src/signals.c	/^void	main_handler(int signum)$/;"	kind:function	line:15
minishell	src/main.c	/^int	minishell(t_shell *shell)$/;"	kind:function	line:63
module	lib/libft/ft_itoa.c	/^long int	module(int n)$/;"	kind:function	line:15
next	lib/libft/libft.h	/^	struct s_list	*next;$/;"	kind:member	line:30	struct:s_list	typeref:struct:s_list::s_list	access:public
pids	includes/minishell.h	/^	int		*pids;$/;"	kind:member	line:35	struct:s_shell	access:public
pipex	src/pipex.c	/^int	pipex(int argc, char **argv, t_shell *shell)$/;"	kind:function	line:110
prev	lib/libft/libft.h	/^	struct s_list	*prev;$/;"	kind:member	line:29	struct:s_list	typeref:struct:s_list::s_list	access:public
print_sorted_env	src/builtins_extra.c	/^static void	print_sorted_env(t_list *env)$/;"	kind:function	line:39	file:
proccess_status	includes/minishell.h	/^	int		proccess_status;$/;"	kind:member	line:33	struct:s_shell	access:public
quote	lib/libft/quotes.c	/^char	quote(char *s, int index)$/;"	kind:function	line:62
redirect_files	src/pipex.c	/^static void	redirect_files(int i, char *argv[], t_shell *shell, int **fds)$/;"	kind:function	line:84	file:
redirect_files_aux	src/pipex_utils.c	/^void	redirect_files_aux(int cid, int i, t_shell *shell, int ***fds)$/;"	kind:function	line:75
redirects_append	src/redirects_handler.c	/^static int	redirects_append(t_shell *shell, int *i, int **fds, int out)$/;"	kind:function	line:256	file:
redirects_handler	src/redirects_handler.c	/^int	redirects_handler(t_shell *shell, int i, int **fds, char **args)$/;"	kind:function	line:404
redirects_heredoc	src/redirects_handler.c	/^static int	redirects_heredoc(t_shell *shell, int *i, int **fds, int out)$/;"	kind:function	line:71	file:
redirects_in_extra	src/redirects_handler.c	/^static int	redirects_in_extra(t_shell *shell, int last_input, int **fds)$/;"	kind:function	line:144	file:
redirects_in_handler	src/redirects_handler.c	/^static int	redirects_in_handler(t_shell *shell, int i, int **fds)$/;"	kind:function	line:168	file:
redirects_input	src/redirects_handler.c	/^static int	redirects_input(t_shell *shell, int *i, int **fds, int in)$/;"	kind:function	line:15	file:
redirects_out_handler	src/redirects_handler.c	/^static int	redirects_out_handler(t_shell *shell, int i, int **fds)$/;"	kind:function	line:337	file:
redirects_out_handler_extra	src/redirects_handler.c	/^static int	redirects_out_handler_extra(t_shell *shell, int last_output, int **fds)$/;"	kind:function	line:313	file:
redirects_output	src/redirects_handler.c	/^static int	redirects_output(t_shell *shell, int *i, int **fds, int out)$/;"	kind:function	line:199	file:
remove_redirects	src/redirects_handler.c	/^char	*remove_redirects(char **new_input, char **args)$/;"	kind:function	line:369
s_env	includes/minishell.h	/^typedef struct s_env$/;"	kind:struct	line:21
s_list	lib/libft/libft.h	/^typedef struct s_list$/;"	kind:struct	line:26
s_shell	includes/minishell.h	/^typedef struct s_shell$/;"	kind:struct	line:31
sigint_parent	src/signals.c	/^void	sigint_parent(int signum)$/;"	kind:function	line:26
smaller	lib/libft/int_size_utils.c	/^int	smaller(int a, int b)$/;"	kind:function	line:22
strfiller	lib/libft/ft_split.c	/^static void	strfiller(char *s, char **str, char c)$/;"	kind:function	line:46	file:
strfiller	lib/libft/ft_split_if_not_in_quote.c	/^static void	strfiller(char *s, char **str, char c)$/;"	kind:function	line:47	file:
strmalloc	lib/libft/ft_split.c	/^static void	strmalloc(int *j, char ***str, int *k)$/;"	kind:function	line:75	file:
strmalloc	lib/libft/ft_split_if_not_in_quote.c	/^static void	strmalloc(int *j, char ***str, int *k)$/;"	kind:function	line:76	file:
t_env	includes/minishell.h	/^}				t_env;$/;"	kind:typedef	line:29	typeref:struct:s_env
t_list	lib/libft/libft.h	/^}					t_list;$/;"	kind:typedef	line:31	typeref:struct:s_list
t_shell	includes/minishell.h	/^}				t_shell;$/;"	kind:typedef	line:40	typeref:struct:s_shell
typeconversor1	lib/libft/ft_printf.c	/^int	typeconversor1(char ch, va_list args)$/;"	kind:function	line:15
typeconversor2	lib/libft/ft_printf.c	/^int	typeconversor2(char ch, va_list args)$/;"	kind:function	line:37
value	includes/minishell.h	/^	char	*value;$/;"	kind:member	line:24	struct:s_env	access:public
wordcounter	lib/libft/ft_split.c	/^static int	wordcounter(char const *s, char c)$/;"	kind:function	line:15	file:
wordcounter	lib/libft/ft_split_if_not_in_quote.c	/^static int	wordcounter(char *s, char c)$/;"	kind:function	line:15	file:
wordfiller	lib/libft/ft_split.c	/^static void	wordfiller(char *j, char *str, char c)$/;"	kind:function	line:33	file:
wordfiller	lib/libft/ft_split_if_not_in_quote.c	/^static void	wordfiller(char *j, char *str, char c)$/;"	kind:function	line:34	file:
