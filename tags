$(LIBFT)	Makefile	/^$(LIBFT):$/;"	t
$(NAME)	Makefile	/^$(NAME): ${OBJS} ${LIBFT}$/;"	t
.c.o	Makefile	/^.c.o:$/;"	t
CC	Makefile	/^CC = cc -g #-fsanitize=address$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m
INCLUDE	Makefile	/^INCLUDE = -I .\/include -I .\/lib\/libft\/include$/;"	m
LIBFT	Makefile	/^LIBFT = ${LIBFT_PATH}\/libft.a$/;"	m
LIBFT_PATH	Makefile	/^LIBFT_PATH = lib\/libft$/;"	m
LIBS	Makefile	/^LIBS = -ltermcap -lncurses -lreadline$/;"	m
MAKE	Makefile	/^MAKE = make -C$/;"	m
MINISHELL_H	includes/minishell.h	/^# define MINISHELL_H$/;"	d
NAME	Makefile	/^NAME = minishell$/;"	m
OBJS	Makefile	/^OBJS = ${SRC:.c=.o}$/;"	m
REMOVE	Makefile	/^REMOVE = rm -f$/;"	m
SRC	Makefile	/^SRC = src\/main.c src\/pipex.c src\/pipex_utils.c src\/envparser.c$/;"	m
all	Makefile	/^all: ${NAME}$/;"	t
clean	Makefile	/^clean:$/;"	t
env	includes/minishell.h	/^	t_list	*env;$/;"	m	struct:s_shell	typeref:typename:t_list *
env_to_list	src/envparser.c	/^int	env_to_list(t_shell *shell, char **envp)$/;"	f	typeref:typename:int
envnew	src/envparser.c	/^t_env	*envnew(char *key, char *value, char *env_i)$/;"	f	typeref:typename:t_env *
fclean	Makefile	/^fclean: clean$/;"	t
full	includes/minishell.h	/^	char	*full;$/;"	m	struct:s_env	typeref:typename:char *
key	includes/minishell.h	/^	char	*key;$/;"	m	struct:s_env	typeref:typename:char *
re	Makefile	/^re: fclean clean all$/;"	t
s_env	includes/minishell.h	/^typedef struct s_env$/;"	s
s_shell	includes/minishell.h	/^typedef struct s_shell$/;"	s
t_env	includes/minishell.h	/^}				t_env;$/;"	t	typeref:struct:s_env
t_shell	includes/minishell.h	/^}				t_shell;$/;"	t	typeref:struct:s_shell
value	includes/minishell.h	/^	char	*value;$/;"	m	struct:s_env	typeref:typename:char *
